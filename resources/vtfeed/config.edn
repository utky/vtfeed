{:duct.core/project-ns  vtfeed
 :duct.core/environment :production

 :duct.module/logging {}
 :duct.module.web/api {}
 :duct.middleware.web/defaults {:static {:resources ["duct/module/web/public"
                                                     "vtfeed/public"]}}
 :duct.module/sql {}
 :duct.module/cljs {:main vtfeed.client}

 :duct.migrator/ragtime
  {:database   #ig/ref :duct.database/sql
   :logger     #ig/ref :duct/logger
   :strategy   :rebase
   :migrations [#ig/ref :vtfeed.migration/subscriptions #ig/ref :vtfeed.migration/feeds]}

 [:duct.migrator.ragtime/sql :vtfeed.migration/subscriptions]
 {:up ["CREATE TABLE subscriptions (
          id      text PRIMARY KEY,
          name    text NOT NULL,
          url     text NOT NULL,
          created timestamp default CURRENT_TIMESTAMP,
          last    timestamp default CURRENT_TIMESTAMP
        );"]
  :down ["DROP TABLE subscriptions;"]}

 [:duct.migrator.ragtime/sql :vtfeed.migration/feeds]
 {:up ["CREATE TABLE feeds (
          id           text PRIMARY KEY,
          channel_id   text NOT NULL,
          title        text NOT NULL,
          description  text NOT NULL,
          url          text NOT NULL,
          thumbnail    text NOT NULL,
          views        integer NOT NULL,
          rate_count   integer NOT NULL,
          rate_average integer NOT NULL,
          rate_min     integer NOT NULL,
          rate_max     integer NOT NULL,
          content      text NOT NULL,
          published    timestamp default CURRENT_TIMESTAMP,
          updated      timestamp default CURRENT_TIMESTAMP
        );"]
  :down ["DROP TABLE feeds;"]}

 [:duct.migrator.ragtime/sql :vtfeed.migration/tags]
 {:up ["CREATE TABLE tags (
          value    text PRIMARY KEY
        );"]
  :down ["DROP TABLE tags;"]}

 [:duct.migrator.ragtime/sql :vtfeed.migration/tagged-subscriptions]
 {:up ["CREATE TABLE tagged_subscriptions (
          subscription_id    text NOT NULL,
          value              text NOT NULL
        );"]
  :down ["DROP TABLE tagged_subscriptions;"]}

 :duct.module/ataraxy
 {"/"                                        [:static/index]
  "/subscriptions"
  {[:post {subscription :body-params}]       [:subscription/create subscription]
   [:get]                                    [:subscription/list]
   ["/" subscription-id]
   {[:delete] [:subscription/delete subscription-id]
    [:get]    [:subscription/get    subscription-id]}}

  "/feeds"
  {[:post {feed :body-params}]              [:feed/create feed]
  [:get #{since}]                      [:feed/list since]
  ["/" feed-id]                              {[:delete] [:feed/delete feed-id]}}}


 :vtfeed.handler.static/index         {}

 :vtfeed.handler.subscription/create  {:db #ig/ref :duct.database/sql}
 :vtfeed.handler.subscription/list    {:db #ig/ref :duct.database/sql}
 :vtfeed.handler.subscription/delete  {:db #ig/ref :duct.database/sql}
 :vtfeed.handler.subscription/get     {:db #ig/ref :duct.database/sql}

 :vtfeed.handler.feed/create  {:db #ig/ref :duct.database/sql}
 :vtfeed.handler.feed/list    {:db #ig/ref :duct.database/sql}
 :vtfeed.handler.feed/delete  {:db #ig/ref :duct.database/sql}

 ;; Channels
 :vtfeed.job/tick            {:seconds 20}
 :vtfeed.job/subscription    {:concurrency  5}
 :vtfeed.job/updates         {:buf-or-n 1}

 :vtfeed.job/subscriber      {:db           #ig/ref :duct.database/sql
                              :concurrency  5
                              :tick         #ig/ref :vtfeed.job/tick
                              :subscription #ig/ref :vtfeed.job/subscription}
 :vtfeed.job/collector       {:subscription #ig/ref :vtfeed.job/subscription
                              :updates      #ig/ref :vtfeed.job/updates}
 :vtfeed.job/consumer        {:db           #ig/ref :duct.database/sql
                              :updates      #ig/ref :vtfeed.job/updates
                              }
 }
